//Software Code used on IDE

//a) Initial Setup
  void setup() {
  myservo.attach(2);
  myservo2.attach(12);
  myservo3.attach(3);

  pinMode(S0, OUTPUT); // Setting S0 pin as output
  pinMode(S1, OUTPUT); // Setting S1 pin as output
  pinMode(S2, OUTPUT); // Setting S2 pin as output
  pinMode(S3, OUTPUT); // Setting S3 pin as output
  pinMode(9, INPUT);   // Setting pin 9 as input for object detection

  digitalWrite(S0, HIGH); // Setting frequency scaling to 20%
  digitalWrite(S1, LOW); 

  pinMode(sensorOut, INPUT); // Setting sensor output pin as input
  pinMode(13, OUTPUT); // Setting pin 13 as output for indication LED
  digitalWrite(13, LOW); // Turning off the indication LED initially

  Serial.begin(9600); // Initializing serial communication
  myservo.write(180); // Base initial position (pin 2)
  delay(2000);
  myservo2.write(60); // Initial twist position (pin 12)
  delay(2000);
  myservo3.write(0); // Gripper initial open position (pin 3)
  delay(2000);
}
-	This segment initializes the servo motors (base, twist, and gripper) on pins 2, 12, and 3 respectively. It sets the colour sensor control pins (S0 to S3) as outputs and configures pin 9 as an input for object detection. It also sets the initial positions of the servos and starts serial communication for debugging[1].

b)	While Loop for Object Detection

  while(digitalRead(9) == LOW) {
  delay(2000);
  redPW = getRedPW();
  bluePW = getBluePW();
  greenPW = getGreenPW();
  delay(2000);
  Serial.print("Red PW = ");
  Serial.print(redPW);
  Serial.print(" - Green PW = ");
  Serial.print(greenPW);
  Serial.print(" - Blue PW = ");
  Serial.println(bluePW);
}
-	This loop continuously checks for the presence of an object by reading pin 9. If an object is detected (pin 9 is LOW), it reads the pulse widths for red, green, and blue colours using the getRedPW(), getBluePW(), and getGreenPW() functions. The measured pulse widths are then printed to the serial monitor for debugging.

c)	Movements for Blue Colour Detection
if ((bluePW < greenPW) && (bluePW < redPW)) {
  delay(3000);
  myservo3.write(0); // Open gripper (pin 3)
  delay(2000);
  myservo.write(90); // Rotate base to front position (pin 2)
  delay(2000);
  myservo2.write(60); // Twist gripper to pick position (pin 12)
  delay(2000);
  myservo3.write(80); // Close gripper to grip object (pin 3)
  delay(2000);
  myservo2.write(90); // Lift object (pin 12)
  delay(2000);
  myservo.write(0); // Move to designated location (pin 2)
  delay(2000);
  myservo2.write(90); // Lower object (pin 12)
  delay(2000);
  myservo3.write(0); // Open gripper to release object (pin 3)
  delay(2000);
  myservo.write(180); // Return base to initial position (pin 2)
  delay(2000);
  myservo2.write(60); // Reset twist position (pin 12)
  delay(2000);
  myservo3.write(0); // Reset gripper position (pin 3)
  delay(2000);
}
